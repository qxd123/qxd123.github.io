[{"title":"Yii 1.0数据库操作 查询、增加、更新、删除","date":"2017-12-10T09:14:38.000Z","path":"2017/12/10/post_17_1211/","text":"最近在和小伙伴开发一个项目，类似于一个视频管里的cms系统，我负责后台数据这块，用php开发，用的框架是yii1.0,对于这个框架是有点老了，自己也没用过不熟悉，于是研究了下，把其中数据库的一些基本操作记录了下来，以便熟悉之后方便操作基本操作如下：1、根据条件查询一个集合 12345$objectResult=Post::model()-&gt;findAll($condition,$params);$objectResult=Post::model()-&gt;findAll(&quot;username=:name&quot;,array(&quot;:name&quot;=&gt;$username));$objectResult=RepairItem::model()-&gt;findAll(&quot;orderno=:orderno and orderpostid=:orderpostid&quot;,array(&quot;:orderno&quot;=&gt;$orderInfo[&apos;orderno&apos;],&apos;:orderpostid&apos;=&gt;$orderInfo[&apos;orderpostid&apos;]));$infoArr = NewsList::model()-&gt;findAll(&quot;status = &apos;1&apos; ORDER BY postid DESC limit 10 &quot;); 2、根据主键查询一个集合,可以使用多个主键 findAllByPk 123$objectResult=Post::model()-&gt;findAllByPk($postIDs,$condition,$params);$objectResult=Post::model()-&gt;findAllByPk($postid,&quot;name like :name and age=:age&quot;,array(&apos;:name&apos;=&gt;$name,&apos;age&apos;=&gt;$age));$objectResult=Post::model()-&gt;findAllByPk(array(1,2)); 3、根据条件查询一个集合,可以是多个条件,把条件放到数组里面 123findAllByAttributes$objectResult=Post::model()-&gt;findAllByAttributes($attributes,$condition,$params);$objectResult=Post::model()-&gt;findAllByAttributes(array(&apos;username&apos;=&gt;&apos;jack&apos;)); 4、根据SQL语句查询一个数组 findAllBySql 12$arrResult=Post::model()-&gt;findAllBySql($sql,$params);$arrResult=Post::model()-&gt;findAllBySql(&quot;select * from tbl_post where username like :name&quot;,array(&apos;:name&apos;=&gt;&apos;?%&apos;)); 5、根据主键查询出一个对象 eg：findByPk(1); 12$arrResult=Post::model()-&gt;findByPk($postID,$condition,$params);$arrResult=Post::model()-&gt;findByPk(1); 6、根据条件查询出一组数据,【可能是多个,但是他只返回第一行数据】 12$arrRow=Post::model()-&gt;find($condition,$params);$arrRow=Post::model()-&gt;find(&apos;username=:name&apos;,array(&apos;:name&apos;=&gt;&apos;jack&apos;)); 7、根据条件查询一组数据,【可以是多个条件,把条件放到数组里面,查询的也是第一条数据】 12$objectResult=Post::model()-&gt;findByAttributes($attributes,$condition,$params);$objectResult=Post::model()-&gt;findByAttributes(array(&apos;username&apos;=&gt;&apos;objectResult&apos;)); 8、根据SQL语句查询一组数据,【查询的也是第一条数据】 12$objectResult=Post::model()-&gt;findBySql($sql,$params);$objectResult=Post::model()-&gt;findBySql(&quot;select * from objectResult where username=:name&quot;,array(&apos;:name&apos;=&gt;&apos;objectResult&apos;)); 9、通过CDbCriteria类find查询出一个对象 1234567$criteria=new CDbCriteria; $criteria-&gt;select=&apos;username&apos;; // 限制显示哪些字段 $criteria-&gt;condition=&apos;username=:username&apos;; //一个查询条件用aCondition.多条件用addCondition$criteria-&gt;params=array(&quot;:username=&gt;&apos;jack&apos;&quot;);$criteria-&gt;order = &quot;postsort DESC&quot;;$criteria-&gt;limit = &quot;3&quot;;$post=Post::model()-&gt;find($criteria); 10、多条件查询的语句 1234567891011121314151617181920$criteria = new CDbCriteria; $criteria-&gt;addCondition(&quot;postid=1&quot;); //等同于 where postid = 1 $criteria-&gt;addInCondition(&apos;postid&apos;, array(1,2,3,4,5)); //等同于 where postid IN (1,2,3,4,5,); $criteria-&gt;addNotInCondition(&apos;postid&apos;, array(1,2,3,4,5));//等同于 NOT IN (1,2,3,4,5,)$criteria-&gt;addCondition(&apos;postid=1&apos;,&apos;OR&apos;);//等同于 OR而非AND $criteria-&gt;addSearchCondition(&apos;username&apos;, &apos;jack&apos;);//等同于 where name like &apos;%jack%&apos; $criteria-&gt;addBetweenCondition(&apos;postid&apos;, 1, 4);// 等同于 between 1 and 4$criteria-&gt;compare(&apos;postid&apos;, 1); //根据你的参数自动处理成addCondition或者addInCondition.$criteria-&gt;compare(&apos;postid&apos;, array(1,2,3)); //数组就会调用addInCondition $criteria-&gt;select = &apos;postid,parentid,name&apos;; //限制显示哪些字段 $criteria-&gt;join = &apos;xxx&apos;; //连接表 $criteria-&gt;with = &apos;xxx&apos;; //调用relations $criteria-&gt;limit = 10; //取1条数据，如果小于0，则不作处理 $criteria-&gt;offset = 1; //两条合并起来，则表示 limit 10 offset 1,或者代表了。limit 1,10 $criteria-&gt;order = &apos;xxx DESC,XXX ASC&apos; ;//排序条件 $criteria-&gt;group = &apos;group 条件&apos;; $criteria-&gt;having = &apos;having 条件 &apos;; $criteria-&gt;distinct = FALSE; //是否唯一查询 三、查询个数,判断查询是否有结果 根据一个条件查询一个集合有多少条记录,返回一个int型数字 12$intCount=Post::model()-&gt;count($condition,$params);$intCount=Post::model()-&gt;count(&quot;username=:name&quot;,array(&quot;:name&quot;=&gt;$username)); 根据SQL语句查询一个集合有多少条记录,返回一个int型数字 12$intCount=Post::model()-&gt;countBySql($sql,$params);$intCount=Post::model()-&gt;countBySql(&quot;select * from objectResult where username=:name&quot;,array(&apos;:name&apos;=&gt;&apos;objectResult&apos;)); 根据一个条件查询查询得到的数组有没有数据,有数据返回一个true,否则没有找到 12$boolExists=Post::model()-&gt;exists($condition,$params);$boolExist=Post::model()-&gt;exists(&quot;name=:name&quot;,array(&quot;:name&quot;=&gt;$username)); 四、添加的方法 123$objectPost = new Post; $objectPost-&gt;username = $username;$objectPost-&gt;password = $password; 或许 12345678$objectPost-&gt;attributes = $arrNewData;if($objectPost-&gt;save())&#123; $intPostId= $objectPost-&gt;primaryKey; //生成主键id echo &quot;添加成功&quot;;&#125;else&#123; echo &quot;添加失败&quot;;&#125; 五、修改的方法 123456789101112131415161718192021222324252627282930Post::model()-&gt;updateAll($attributes,$condition,$params);$count =Post::model()-&gt;updateAll(array(&apos;username&apos;=&gt;&apos;11111&apos;,&apos;password&apos;=&gt;&apos;11111&apos;),&apos;password=:pass&apos;,array(&apos;:pass&apos;=&gt;&apos;1111a1&apos;));if($count &gt; 0)&#123; echo &quot;修改成功&quot;;&#125;else&#123; echo &quot;修改失败&quot;;&#125; $rt = PostList::model()-&gt;updateAll(array(&apos;status&apos;=&gt;&apos;1&apos;),&apos;staff_postid=:staff AND host_postid=:host&apos;,array(&apos;:staff&apos;=&gt;$staff_postid,&apos;:host&apos;=&gt;$host_postid));Post::model()-&gt;updateByPk($pk,$attributes,$condition,$params);$count=Post::model()-&gt;updateByPk(1,array(&apos;username&apos;=&gt;&apos;jack&apos;,&apos;password&apos;=&gt;&apos;jack&apos;));$count=Post::model()-&gt;updateByPk(array(1,2),array(&apos;username&apos;=&gt;&apos;jack1&apos;,&apos;password&apos;=&gt;&apos;jack1&apos;),&apos;username=:name&apos;,array(&apos;:name&apos;=&gt;&apos;jack&apos;));if($count &gt; 0)&#123; echo &quot;修改成功&quot;;&#125;else&#123; echo &quot;修改失败&quot;;&#125; Post::model()-&gt;updateCounters($counters,$condition,$params);$count=Post::model()-&gt;updateCounters(array(&apos;status&apos;=&gt;1),&apos;username=:name&apos;,array(&apos;:name&apos;=&gt;&apos;jack&apos;));if($count &gt; 0)&#123; echo &quot;修改成功&quot;;&#125;else&#123; echo &quot;修改失败&quot;;&#125; //array(‘status’=&gt;1)代表数据库中的post表根据条件username=’jack’,查询出的所有结果status字段都自加1 六、删除的方法 12345678910111213141516171819//deleteAllPost::model()-&gt;deleteAll($condition,$params);$count = Post::model()-&gt;deleteAll(&apos;username=:name and password=:pass&apos;,array(&apos;:name&apos;=&gt;&apos;jack&apos;,&apos;:pass&apos;=&gt;&apos;jack&apos;));$count = Post::model()-&gt;deleteAll(&apos;postid in(&quot;1,2,3&quot;)&apos;);//删除postid为这些的数据if($count&gt;0)&#123; echo &quot;删除成功&quot;;&#125;else&#123; echo &quot;删除失败&quot;;&#125; //deleteByPkPost::model()-&gt;deleteByPk($pk,$condition,$params);$count = Post::model()-&gt;deleteByPk(1);$count =Post::model()-&gt;deleteByPk(array(1,2),&apos;username=:name&apos;,array(&apos;:name&apos;=&gt;&apos;jack&apos;));if($count&gt;0)&#123; echo &quot;删除成功&quot;;&#125;else&#123; echo &quot;删除失败&quot;;&#125;&#125; 七、执行原生的SQL语句 12345$sql = &quot;select t.*, t1.userphone, t1.truename, t1.usermail from &#123;&#123;member_contact&#125;&#125; t left join &#123;&#123;member&#125;&#125; t1 on t.userid = t1.userid where t.contactid in (1,2,3)&quot;;$arrRows=Yii::app()-&gt;db-&gt;createCommand($sql)-&gt;query();foreach ($arrRows as $k =&gt; $v)&#123; &#125; 八、事务处理 【多表更新插入操作请使用事务处理】 12345678910111213141516171819202122$transaction = Yii::app()-&gt;db-&gt;beginTransaction();try&#123; $arrOrderProfile = array( &apos;orderid&apos; =&gt; $orderId, &apos;userip&apos; =&gt; $userip, &apos;contactid&apos; =&gt; $contactId, &apos;updatetime&apos;=&gt; $now ); $modelOrderProfile = new RepairOrderProfile(); $modelOrderProfile-&gt;attributes = $arrOrderProfile; if(!$modelOrderProfile-&gt;save())&#123; throw new CException(&apos;维修订单生成失败,通知事务回滚&apos;); &#125; $recordCounter = Counter::model()-&gt;updateByPk(1,array(&apos;max_id&apos;=&gt;$orderId)); if($recordCounter &lt;= 0 ) throw new CException(&apos;订单计数器更新失败,通知事务回滚&apos;); $transaction-&gt;commit(); //提交事务会真正的执行数据库操作&#125;catch(Exception $e)&#123; file_put_contents(&apos;action.log&apos;, $e-&gt;getCode().&apos;:&apos;.$e-&gt;getMessage().&apos;--&apos;.date(&apos;Y-m-d H:i:s&apos;,time()),FILE_APPEND); $transaction-&gt;rollback(); &#125; 这个纯粹是为了记录一下而已想看更详细的请看原文的链接地址：http://www.aipanshi.com/post/2.html","tags":[]},{"title":"macOS 上都有哪些既免费、又实用的工具？","date":"2017-11-03T02:37:39.000Z","path":"2017/11/03/post_2/","text":"原文链接：sspai.com来自硅谷的「无人驾驶」入门课程，限时报名中http://cn.udacity.com/course/intro-to-self-driving-cars--nd113编注：「新手问号」是少数派的一个全新栏目。它面向完全「零基础」的新手用户，通过最简单易懂的方式，帮助你快速掌握关于系统和软硬件的入门知识。 此前少数派已经做过两篇面向 macOS 新手的文章，包括： 刚从 Windows 转到 macOS，如何快速上手操作？做好这四种方法，让你的 Mac 远离数据被盗和丢失这一篇同样面向 macOS 新手，旨在帮他们找到既免费、又实用的工具。接下来我们会更关注面向初学者的内容，也欢迎各位作者踊跃向我们投稿。 对于一台全新的 Mac ，我们除了欣赏它奇妙的工业设计之外，还有一件非常重要的事情，就是装上 Mac 上的第一批软件。一般，这第一批软件会一直伴随着我们日常生活、办公、娱乐，所以能在最开始就装上这些优秀的应用，绝对是提升幸福感的不错途径。 The Unarchive：解压缩工具 macOS 对于压缩文件的处理不是很好。如果你没有安装任何软件，你只能选择压缩成 .zip 或者解压 .zip 文件，可能听起来有点鸡肋。而 The Unarchiver 作为 Mac 上一款相当良心的解压工具，支持解压 RAR、7-zip、Tar 等常用压缩格式的文件，同时也可以打开 ISO、EXE 等类型的文件，功能齐全并且免费。 The Unarchiver下载地址：The Unarchiver CheatSheet：快捷键提示 如果你想在电脑上进行那种行云流水的操作，快捷键的利用一定是最重要的。但是别说其他软件的快捷键，可能就连自带的 Safari 的快捷键都不知道一两个。如果你还在搜索「XXX 的快捷键是什么？」，那一定是没有遇到过 CheatSheet 。这款软件在使用前需要在「系统偏好设置 - 安全性与隐私 - 隐私 - 辅助功能」中勾选 CheatSheet 一项，即可在大多数 App 界面中长按 Command-⌘ 直接呼出该软件的全部快捷键，可以说是非常的方便了。 CheatSheet下载地址：CheatSheet IINA：视频播放器 如果是原来，大多数人推荐给你的第一款视频播放器大概会是 MplayerX，但是这款软件在安装时大多数情况下富含了各类「垃圾软件」，并且也太久没有更新了。但 Mac 上不安装一个视频播放器，可能你的观影的日子就到头了。IINA 作为一款开源的视频播放器，却很好的的做到了「干净、流畅、美观」等诸多要点。高度定制的快捷键绝对可以为你带来更顺手的操作环境，对视频格式的支持也做的更加完美，一定是《macOS 上最好的现代视频播放器：IINA》。 IINA下载地址：IINA AppCleaner：卸载工具 Mac 上的卸载方式有很多，在 MAS 上安装的软件可以进入 Launchpad 长按删除。如果是其他来源安装的软件，可以在 Finder 里的应用程序一栏使用 Command + Delete 进行删除。但是有人会考虑到会不会有残留在其他的地方的文件没有删除干净，这时你就可以选择一款卸载器来卸载你的所有软件。为大家推荐的 AppCleaner 一款轻量级卸载软件，只需要将所需卸载软件拖拽至 AppCleaner 的空白处即可以自动检查相关的所有文件并清除。 下载地址：AppCleaner Jietu：截图工具 截图无论是在移动端还是 PC 端都是比较常见的操作，但是 Mac 自带的截图只能为我们截取部分画面或者整个窗口，从功能上来说并不是很齐全。Jietu 是腾讯出品的一款便捷式截图软件，除了窗口截图、定时截图、全屏截图的基本功能以外，还可以对截图进行标注打码等二次操作。同时，Jietu 还可以进行窗口的录制，还支持对视频进行剪裁，选择清晰度以及导出 GIF 等。 Jietu关联阅读：圈点之后，试试腾讯出品的免费 Mac 截图软件：截图 Jietu 下载地址：Jietu Spark：邮箱客户端 Mac 的原生邮件应用可能对新用户不是那么的友好，当然我这个老用户也没有选择使用原生的邮件。原生客户端时常会根据自己的心情，对你实施服务器断开连接，邮件龟速发送等感人操作，所以不得不为大家推荐一款第三方的邮件客户端。Spark 邮件客户端是 Readdle 公司出品的一款免费邮件客户端，除了邮件提示相当及时以外，可以配置功能的自由度也比较高，当然还有不错的颜值。 Spark下载地址：Spark Franz：多合一聊天应用 电脑在穿在你生活中的每一个部分，而社交一定是里面必不可少的一个元素，每天你在使用的聊天应用或许不少，微信、Telegram、Slack 等等。一个又一个软件不停的切换或许就浪费了你太多的时间，Franz 就集合了多种即时通讯的网页版，让你在一个软件里就可以登录你所有的聊天帐号，很可惜的是这里面没有 QQ。如果你只是简单的聊天而无需一些附加的功能，不妨尝试一下 Franz，或许它会给你一种不一样的体验。 Franz关联阅读：在一个软件里聊微信、Telegram、Slack，即时通讯聚合：Franz 下载地址：Franz Aria2GUI：下载工具 其实迅雷在 Mac 上的使用体验还算不错，尤其是在对应用进行一定处理除去广告。但是迅雷下载文件时长会出现速度上不去，没有资源或者无法下载的问题，不如尝试一下是用 Aria2 作为你的下载器，不仅可以下载一般的文件，结合相关插件还可以直接下载百度网盘的内容。在少数派介绍 Aria2 配置的《Mac 上使用百度网盘很烦躁？花点时间配置 aria2 吧》中所使用只是它的网页版，操作起来可能也没有那么方便，而 Aria2GUI 则是一款拥有了独立界面的软件，除开集成了多线程下载和 Aria2c 之外，还可以对未下载完成的任务自动保存以及相关任务完成时发送提示，比起网页版更加人性化了许多。 Aria2GUI下载地址：Aria2GUI 有道词典 Mac 的原生词典是包含《现代汉语规范词典》和《牛津英汉汉英词典》的，用户也可以通过 Spotlight 输入单词进行快速查询，或者在文本中使用 Force Touch 进行查询。对于一些用户来说，原生的翻译可能没有太全面，或者达不到他想要的效果。其实，安装一个有道词典也是不错选择，界面干净整洁，翻译准确度高，支持快捷查词、划线查词，取词等功能。","tags":[]},{"title":"来啊，互相伤害啊","date":"2017-11-02T03:39:10.000Z","path":"2017/11/02/test/","text":"一人我饮酒醉，二人我毒香水66666666666666666666666666666666666","tags":[]},{"title":"更新日志启动","date":"2017-11-02T03:39:10.000Z","path":"2017/11/02/test3/","text":"以后每周至少更新3片文章，记录自己的成长","tags":[]},{"title":"Hello World","date":"2017-11-01T01:55:16.000Z","path":"2017/11/01/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]